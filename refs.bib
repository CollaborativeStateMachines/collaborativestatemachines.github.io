@misc{etheredgeCollaborativeStateMachines2025,
  title = {Collaborative {{State Machines}}: {{A Better Programming Model}} for the {{Cloud-Edge-IoT Continuum}}},
  shorttitle = {Collaborative {{State Machines}}},
  author = {Etheredge, Marlon and Fahringer, Thomas and Erlacher, Felix and Kohler, Elias and Pedratscher, Stefan and {Aznar-Poveda}, Juan and Saurabh, Nishant and Lebre, Adrien},
  year = {2025},
  month = jul,
  number = {arXiv:2507.21685},
  eprint = {2507.21685},
  primaryclass = {cs},
  publisher = {arXiv},
  doi = {10.48550/arXiv.2507.21685},
  urldate = {2025-09-01},
  abstract = {The development of Cloud-Edge-IoT applications requires robust programming models. Existing models often struggle to manage the dynamic and stateful nature of these applications effectively. This paper introduces the Collaborative State Machines (CSM) programming model to address these complexities. CSM facilitates the development of reactive, event-driven, and stateful applications targeting the Cloud-Edge-IoT continuum. Applications built with CSM are composed of state machines that collaborate autonomously and can be distributed across different layers of the continuum. Key features of CSM include (i) a sophisticated collaboration mechanism among state machines utilizing events and persistent data; (ii) encapsulation of state through the inherent state of state machines and persistent data; (iii) integration of actions and service invocations within states and state transitions, thereby decoupling complex application logic from compute and data processing services; and (iv) an advanced data model that supports the processing of local, static, and persistent data with defined scope and lifetime. In addition to introducing the CSM programming model, we present a runtime system and a comprehensive evaluation of our approach. This evaluation is based on three use cases: a stress test on a large-scale infrastructure, a surveillance system application, and a complex smart factory scenario, all deployed on the Grid'5000 testbed. Our results demonstrate a 12x increase in throughput through novel language features in the stress test. Compared to Serverless Workflow, a state-of-the-art baseline system, we show a 2.3x improvement in processing time per processed image in a surveillance system use case, a 55x reduction in total processing time for a smart factory use case, and an overall improvement in productivity across these use cases.},
  archiveprefix = {arXiv},
  keywords = {Computer Science - Distributed Parallel and Cluster Computing},
  annotation = {TLDR: The Collaborative State Machines (CSM) programming model is introduced and a runtime system and a comprehensive evaluation of the approach are presented, demonstrating a 12x increase in throughput through novel language features in the stress test and an overall improvement in productivity across these use cases.},
  file = {/home/marlon/Zotero/storage/PH4SGNQ3/Etheredge et al. - 2025 - Collaborative State Machines A Better Programming Model for the Cloud-Edge-IoT Continuum.pdf;/home/marlon/Zotero/storage/PU9GFYWR/2507.html}
}

@inproceedings{povedaNyxFaultTolerantFully2025,
  title = {Nyx: {{A Fault-Tolerant Fully Distributed Message Queue}} for the {{IoT-Edge-Cloud Continuum}}},
  shorttitle = {Nyx},
  booktitle = {2025 21st {{International Conference}} on {{Distributed Computing}} in {{Smart Systems}} and the {{Internet}} of {{Things}} ({{DCOSS-IoT}})},
  author = {Poveda, Juan Aznar and Etheredge, Marlon and Pedratscher, Stefan and K{\"u}nig, Patrick and Fahringer, Thomas},
  year = {2025},
  month = jun,
  pages = {1021--1026},
  issn = {2325-2944},
  doi = {10.1109/DCOSS-IoT65416.2025.00154},
  urldate = {2025-09-01},
  abstract = {Message queues play a critical role in enabling reliable, asynchronous communication across distributed systems, particularly within the IoT, Edge, and Cloud continuum, where workloads are highly dynamic and decentralized. Traditional message queue systems often rely on centralized brokers, which can introduce scalability bottlenecks and single points of failure. In this paper, we present Nyx, a novel distributed message queue that eliminates the reliance on individual brokers to provide fault-tolerant, scalable, and robust communication across heterogeneous nodes. Nyx leverages RAFT-based broker clusters to distribute message processing responsibilities across all participating nodes, ensuring efficient and resilient operation. We conduct a comprehensive performance evaluation of Nyx using geo-distributed clusters spanning the IoT-Edge-Cloud continuum and compare it against existing message queue systems. Experimental results demonstrate that Nyx achieves up to 55\% lower latency and 90 \% higher throughput than state-of-the-art baselines, highlighting its effectiveness in meeting the demands of modern distributed applications.},
  keywords = {Cloud computing,Communications,Distributed computing,Distributed Systems,Edge computing,Fault tolerance,Fault tolerant systems,Internet of Things,Messaging,Performance evaluation,Scalability,Smart systems,Throughput},
  annotation = {TLDR: A novel distributed message queue that eliminates the reliance on individual brokers to provide fault-tolerant, scalable, and robust communication across heterogeneous nodes, Nyx leverages RAFT-based broker clusters to distribute message processing responsibilities across all participating nodes, ensuring efficient and resilient operation.},
  file = {/home/marlon/Zotero/storage/2EQ9W24A/Poveda et al. - 2025 - Nyx A Fault-Tolerant Fully Distributed Message Queue for the IoT-Edge-Cloud Continuum.pdf}
}
